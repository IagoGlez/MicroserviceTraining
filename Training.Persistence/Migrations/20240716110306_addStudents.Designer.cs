// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Training.Persistence.DbContexts;

#nullable disable

namespace Training.Persistence.Migrations
{
    [DbContext(typeof(CourseContext))]
    [Migration("20240716110306_addStudents")]
    partial class addStudents
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("Training.Domain.Entities.Coach", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CommunityName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ExperienceYears")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RollOnDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Coach");
                });

            modelBuilder.Entity("Training.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxNumberOfStudents")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1bb9b23c-ac96-4df4-b9b2-0f8b84cccad2"),
                            MaxNumberOfStudents = 200,
                            Name = "IA",
                            StartDate = new DateTime(2024, 7, 16, 13, 3, 6, 360, DateTimeKind.Local).AddTicks(7114)
                        },
                        new
                        {
                            Id = new Guid("d5f4cf21-f868-4f2c-898b-90f48fbd3361"),
                            MaxNumberOfStudents = 5000,
                            Name = "Ingles",
                            StartDate = new DateTime(2024, 7, 16, 13, 3, 6, 360, DateTimeKind.Local).AddTicks(7186)
                        },
                        new
                        {
                            Id = new Guid("815614b2-7a44-41f0-9843-1fd03ee78c49"),
                            MaxNumberOfStudents = 30,
                            Name = "Microservicios",
                            StartDate = new DateTime(2024, 7, 16, 13, 3, 6, 360, DateTimeKind.Local).AddTicks(7190)
                        });
                });

            modelBuilder.Entity("Training.Domain.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CommunityName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("HoursTaken")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RollOnDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
